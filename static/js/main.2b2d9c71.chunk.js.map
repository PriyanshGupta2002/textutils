{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","style","color","mode","backgroundColor","className","id","type","Navbar","to","title","abouttext","onClick","toggle","htmlFor","toggle2","toggle3","Textform","useState","text","setText","heading","value","onChange","event","target","rows","placeholder","disabled","length","newtext","toUpperCase","showAlert","toLowerCase","replace","trim","match","split","filter","element","Alert","height","alertmessage","role","word","lower","charAt","slice","capitalize","message","defaultProps","App","setmode","alert","setAlert","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2b2d9c71.chunk.js","sourcesContent":["// import React, { useState } from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [style, mystyle] = useState({\r\n    //     backgroundColor: 'white',\r\n    //     color: 'black',\r\n    //     border:'none'\r\n    // })\r\n    let style={\r\n       color:props.mode==='dark'?'white':props.mode==='warning'?'black':props.mode==='success'?'black':'black',\r\n       backgroundColor:props.mode==='dark'?'grey':props.mode==='warning'?'#fff44f':props.mode==='success'?'#3fff00':'white',\r\n    }\r\n \r\n   \r\n    return (\r\n        <div className=\"container my-3\" style={style}>\r\n            <h1>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" style={style} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                           Analyze Your Text\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={style}>\r\n                            Text Play provides you an option to analyze your text. You can convert your text to uppercase,remove spaces and much more\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={style} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Free To Use\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\" >\r\n                        <div className=\"accordion-body\" style={style}>\r\n                            Our website is free to use. You even do not have to login or signup for using the features on our site. All the features are free of cost. \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={style} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                           Browser Compatible\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={style}>\r\n                           Our website supported by all browsers and you can easily use it on any browser without restrictions\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"  data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active \" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to=\"/about\">{props.abouttext}</Link>\r\n            </li>\r\n          </ul>\r\n          <div className=\"form-check form-switch mx-2\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggle}/>\r\n            <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\" >EnableDarkMode</label>\r\n          </div>\r\n\r\n          <div className=\"form-check form-switch mx-2\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggle2}/>\r\n            <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\" >EnableYellowMode</label>\r\n          </div>\r\n\r\n          <div className=\"form-check form-switch mx-2\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggle3}/>\r\n            <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\" >EnableGreenMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  abouttext: PropTypes.string.isRequired, // .isrequired--> means necessary to pass \r\n  title: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: 'Set Your Title',\r\n  abouttext: 'About Us',\r\n};","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport default function Textform(props) {\r\n    const HandleUpCase = () => {\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Text Converted to UpperCase\",'success')\r\n    }\r\n    const HandleLowerCase = () => {\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Text Converted to LowerCase\",'success')\r\n\r\n\r\n    }\r\n    const cleartext = () => {\r\n        setText(\"\")\r\n        props.showAlert(\"Text Cleared!\",'success')\r\n    }\r\n    const removepunc = () => {\r\n        let newtext = text.replace(/[.,#!$%&;:{}=\\-_`~()]/g, \"\");\r\n        setText(newtext)\r\n        props.showAlert(\"Punctuation Removed Successfully!\",'success')\r\n    }\r\n    const clearspace = () => {\r\n        let newtext = text.replace(/\\s+/g,' ').trim();\r\n        setText(newtext)\r\n        props.showAlert(\"Spaces removed!\",'success')\r\n\r\n    }\r\n    const emailext = () => {\r\n        let newtext = text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/gi)\r\n        setText(` ${newtext} `)\r\n        props.showAlert(\"Email has been extracted\",'success')\r\n    }\r\n    const handleonchange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"container my-5\">\r\n                <form  >\r\n                    <h1 className=\"my-4\" style={{color:props.mode==='dark'?'white':props.mode==='warning'?'black':props.mode==='success'?'black':'black'}}>{props.heading}</h1>\r\n                    <div className=\"form-group\">\r\n                        <textarea className=\"form-control\" id=\"mybox\" value={text} onChange={handleonchange} rows=\"10\" placeholder={\"Enter Your Text\"} style={{backgroundColor:props.mode==='dark'?'grey':props.mode==='warning'?'#fff44f':props.mode==='success'?'#3fff00':'white',color:props.mode==='dark'?'white':props.mode==='warning'?'black':props.mode==='success'?'black':'black'}}></textarea>\r\n                    </div>\r\n                    <button type=\"button\" disabled={text.length===0} className=\"btn btn-outline-success my-2 mx-2\" onClick={HandleUpCase}>To Uppercase</button>\r\n                    <button type=\"button\" disabled={text.length===0} className=\"btn btn-outline-danger my-2 mx-2\" onClick={HandleLowerCase}>To LowerCase</button>\r\n                    <button type=\"button\" disabled={text.length===0} className=\"btn btn-outline-warning my-2 mx-2\" onClick={clearspace}>Remove Spaces</button>\r\n                    <button type=\"button\" disabled={text.length===0} className=\"btn btn-outline-warning my-2 mx-2\" onClick={removepunc} >Remove Punctutaions</button>\r\n                    <button type=\"button\" disabled={text.length===0} className=\"btn btn-outline-info my-2 mx-2\" onClick={cleartext} >ClearText</button>\r\n                    <button type=\"button\" disabled={text.length===0} className=\"btn btn-outline-info my-2 mx-2\" onClick={emailext} >FindEmailId</button>\r\n\r\n                </form>\r\n            </div>\r\n            <div className=\"container\" style={{color:props.mode==='dark'?'white':props.mode==='warning'?'black':props.mode==='success'?'black':'black'}}>\r\n                <h1>Your Text Summary</h1>\r\n\r\n                <p>{text.split(\" \").filter((element)=>{\r\n                return element.length!==0\r\n                }).length} words and {text.length} characters</p>\r\n                <p>{text.split(\" \").filter((element)=>{\r\n                return element.length!==0\r\n                }).length * 0.008} minutes to read</p>\r\n                <h2>Preview</h2>\r\n                {/* <p>{text.length>0?text:\"Nothing to Preview\"}</p> */}\r\n                <p>{text.length>0?text:\"Nothing to Preview\"}</p>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nTextform.propTypes = {\r\n    heading: PropTypes.string.isRequired,\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        <div className=\"container my-4\" style={{height:'15px'}}>\r\n       { props.alertmessage && <div className={`alert alert-${props.alertmessage.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alertmessage.type)}</strong>: {props.alertmessage.message}\r\n      </div>}\r\n      </div>\r\n    )\r\n}\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nfunction App() {\n\n\n  const [mode, setmode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const showAlert=(message,type)=>{\nsetAlert({\n  message:message,\n  type:type\n\n})\nsetTimeout(() => {\n    setAlert(null)\n}, 2000);\n  }\n  const toggle=()=>{\n    if (mode==='dark') {\n      setmode('light')\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light Mode is enabled\",'success')\n      document.title='TextPlay-LightMode'\n    }\n    else{\n      setmode('dark')\n      document.body.style.backgroundColor='#464646'\n      showAlert('Dark Mode is enabled','success')\n      document.title='TextPlay-DarkMode'\n    }\n  }\n\n  const togglewarning=()=>{\n    if (mode==='warning') {\n      setmode('light')\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light Mode is enabled\",'success')\n      document.title='TextPlay-LightMode'\n    }\n    else{\n      setmode('warning')\n      document.body.style.backgroundColor='#FFFACD'\n      showAlert('Yellow Mode is enabled','success')\n      document.title='TextPlay-YellowMode'\n\n    }\n  }\n  const togglesuccess=()=>{\n    if (mode==='success') {\n      setmode('light')\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light Mode is enabled\",'success')\n      document.title='TextPlay-LightMode'\n    }\n\n    else{\n      setmode('success')\n      document.body.style.backgroundColor=' #aaf0d1'\n      showAlert('Blue Mode is enabled','success')\n      document.title='TextPlay-GreenMode'\n    }\n  }\n  return (\n\n    <>\n    <Router>\n      <Navbar title=\"TextPlay\" mode={mode} toggle={toggle} toggle2={togglewarning} toggle3={togglesuccess}/>\n      <Alert alertmessage={alert}/>\n      <Switch>\n\n          <Route exact path=\"/about\">\n            <About mode={mode} showAlert={showAlert} />\n          </Route>\n          <Route exact path=\"/\">\n      <Textform heading=\"Text-Play Convert Text to UpperCase to LowerCase. Count Words and Characters\" mode={mode} showAlert={showAlert}/>\n          </Route>\n\n\n      </Switch>   \n      </Router>\n \n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
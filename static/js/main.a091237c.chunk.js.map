{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggle","htmlFor","toggle2","toggle3","Textform","useState","text","setText","style","color","heading","value","onChange","event","target","rows","placeholder","backgroundColor","newtext","toUpperCase","showAlert","toLowerCase","trim","replace","match","length","split","Alert","alertmessage","role","word","lower","charAt","slice","capitalize","message","defaultProps","abouttext","App","setmode","alert","setAlert","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a091237c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"  data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active \" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to=\"/about\">{props.abouttext}</Link>\r\n            </li> */}\r\n          </ul>\r\n          <div className=\"form-check form-switch mx-2\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggle}/>\r\n            <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\" >EnableDarkMode</label>\r\n          </div>\r\n\r\n          <div className=\"form-check form-switch mx-2\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggle2}/>\r\n            <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\" >EnableYellowMode</label>\r\n          </div>\r\n\r\n          <div className=\"form-check form-switch mx-2\">\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggle3}/>\r\n            <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\" >EnableGreenMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  abouttext: PropTypes.string.isRequired, // .isrequired--> means necessary to pass \r\n  title: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: 'Set Your Title',\r\n  abouttext: 'About Us',\r\n};","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport default function Textform(props) {\r\n    const HandleUpCase = () => {\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Text Converted to UpperCase\",'success')\r\n    }\r\n    const HandleLowerCase = () => {\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Text Converted to LowerCase\",'success')\r\n\r\n\r\n    }\r\n    const cleartext = () => {\r\n        setText(\"\")\r\n        props.showAlert(\"Text Cleared!\",'success')\r\n    }\r\n    const removepunc = () => {\r\n        let newtext = text.replace(/[.,#!$%&;:{}=\\-_`~()]/g, \"\");\r\n        setText(newtext)\r\n        props.showAlert(\"Punctuation Removed Successfully!\",'success')\r\n    }\r\n    const clearspace = () => {\r\n        let newtext = text.trim()\r\n        setText(newtext)\r\n        props.showAlert(\"Spaces removed!\",'success')\r\n\r\n    }\r\n    const emailext = () => {\r\n        let newtext = text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/gi)\r\n        setText(` ${newtext} `)\r\n        props.showAlert(\"Email has been extracted\",'success')\r\n    }\r\n    const handleonchange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className=\"container my-5\">\r\n                <form  >\r\n                    <h1 style={{color:props.mode==='dark'?'white':props.mode==='warning'?'black':props.mode==='success'?'black':'black'}}>{props.heading}</h1>\r\n                    <div className=\"form-group\">\r\n                        <textarea className=\"form-control\" id=\"mybox\" value={text} onChange={handleonchange} rows=\"10\" placeholder={\"Enter Your Text\"} style={{backgroundColor:props.mode==='dark'?'grey':props.mode==='warning'?'#fff44f':props.mode==='success'?'#3fff00':'white',color:props.mode==='dark'?'white':props.mode==='warning'?'black':props.mode==='success'?'black':'black'}}></textarea>\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-outline-success my-2 mx-2\" onClick={HandleUpCase}>To Uppercase</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-danger my-2 mx-2\" onClick={HandleLowerCase}>To LowerCase</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-warning my-2 mx-2\" onClick={clearspace}>Remove Spaces</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-warning my-2 mx-2\" onClick={removepunc} >Remove Punctutaions</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-info my-2 mx-2\" onClick={cleartext} >ClearText</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-info my-2 mx-2\" onClick={emailext} >FindEmailId</button>\r\n\r\n                </form>\r\n            </div>\r\n            <div className=\"container\" style={{color:props.mode==='dark'?'white':props.mode==='warning'?'black':props.mode==='success'?'black':'black'}}>\r\n                <h1>Your Text Summary</h1>\r\n                <p>{text.length>0?text.trim().split(\" \").length:0} words and {text.length} characters</p>\r\n                <p>{text.split(\" \").length * 0.008} minutes to read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Please Enter Text Above To Preview\"}</p>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nTextform.propTypes = {\r\n    heading: PropTypes.string.isRequired,\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        props.alertmessage && <div className={`alert alert-${props.alertmessage.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alertmessage.type)}</strong>: {props.alertmessage.message}\r\n      </div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\nfunction App() {\n\n\n  const [mode, setmode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const showAlert=(message,type)=>{\nsetAlert({\n  message:message,\n  type:type\n\n})\nsetTimeout(() => {\n    setAlert(null)\n}, 2000);\n  }\n  const toggle=()=>{\n    if (mode==='dark') {\n      setmode('light')\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light Mode is enabled\",'success')\n      document.title='TextPlay-LightMode'\n    }\n    else{\n      setmode('dark')\n      document.body.style.backgroundColor='#464646'\n      showAlert('Dark Mode is enabled','success')\n      document.title='TextPlay-DarkMode'\n    }\n  }\n\n  const togglewarning=()=>{\n    if (mode==='warning') {\n      setmode('light')\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light Mode is enabled\",'success')\n      document.title='TextPlay-LightMode'\n    }\n    else{\n      setmode('warning')\n      document.body.style.backgroundColor='#FFFACD'\n      showAlert('Yellow Mode is enabled','success')\n      document.title='TextPlay-YellowMode'\n\n    }\n  }\n  const togglesuccess=()=>{\n    if (mode==='success') {\n      setmode('light')\n      document.body.style.backgroundColor='white'\n      showAlert(\"Light Mode is enabled\",'success')\n      document.title='TextPlay-LightMode'\n    }\n\n    else{\n      setmode('success')\n      document.body.style.backgroundColor=' #aaf0d1'\n      showAlert('Blue Mode is enabled','success')\n      document.title='TextPlay-GreenMode'\n    }\n  }\n  return (\n\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextPlay\" mode={mode} toggle={toggle} toggle2={togglewarning} toggle3={togglesuccess}/>\n      <Alert alertmessage={alert}/>\n      {/* <Switch>\n\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n\n\n          {/* <Route exact path=\"/\"> */}\n      <Textform heading=\"Welcome To Text Play-Enter text below\" mode={mode} showAlert={showAlert}/>\n          {/* </Route>\n\n\n      </Switch>   \n      </Router> */}\n \n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}